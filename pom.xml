<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>fr.expand.project</groupId>
  <artifactId>expand</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>ExpandProject</name>
  <packaging>pom</packaging>
  
  <properties>
  	<neo4j.version>3.0.4</neo4j.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>
  
  	<!-- Add module subfolder name into this list -->
  	<modules>
        <module>commons</module>
        <module>importdata</module>
        <module>model</module>
    </modules>
    
    <dependencies>
        <!-- https://mvnrepository.com/artifact/junit/junit -->
		  <dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>4.12</version>
		  </dependency>
		<!-- Log4j 2 -->
		  <dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-api</artifactId>
		    <version>2.7</version>
		  </dependency>
		  <dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-core</artifactId>
		    <version>2.7</version>
		  </dependency>	
    </dependencies>
    
   <build>
	    <pluginManagement>
	        <plugins>
	            <!--
	                If we e.g. execute on JDK 1.7, we should compile for Java 7 to get
	                the same (or higher) JAXB API version as used during the xjc execution.
	            -->
	            <plugin>
	                <groupId>org.apache.maven.plugins</groupId>
	                <artifactId>maven-compiler-plugin</artifactId>
	                <configuration>
	                    <source>${maven.compiler.source}</source>
	                    <target>${maven.compiler.target}</target>
	                </configuration>
	            </plugin>
	        </plugins>
	    </pluginManagement>
    </build>
</project>